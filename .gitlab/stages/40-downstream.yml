# requires /.gitlab/base.yml

.rule_branch_rufus_match:
  if: '$CI_MERGE_REQUEST_LABELS =~ /.*branch::rufus::match.*/'
  when: on_success

.rule_branch_commercial_match:
  if: '$CI_MERGE_REQUEST_LABELS =~ /.*branch::commercial::match.*/'
  when: on_success

.rule_exclude_on_branch_rufus_match:
  if: '$CI_MERGE_REQUEST_LABELS =~ /.*branch::rufus::match.*/'
  when: never

.rule_exclude_on_branch_commercial_match:
  if: '$CI_MERGE_REQUEST_LABELS =~ /.*branch::commercial::match.*/'
  when: never

.rule_legacy_dev_branch:
  if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^6\.[0-4]$/ || $CI_COMMIT_BRANCH =~ /^6\.[0-4]$/'
  when: on_success

.rule_exclude_on_legacy_dev_branch:
  if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^6\.[0-4]$/ || $CI_COMMIT_BRANCH =~ /^6\.[0-4]$/'
  when: never

.rule_legacy_release_branch:
  if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^6\.([0-4])\.\d+\.\d+/ || $CI_COMMIT_BRANCH =~ /^6\.([0-4])\.\d+\.\d+/'
  when: on_success

.rule_exclude_on_legacy_release_branch:
  if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^6\.([0-4])\.\d+\.\d+/ || $CI_COMMIT_BRANCH =~ /^6\.([0-4])\.\d+\.\d+/'
  when: never

.rule_release_branch:
  if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^6\.([5-9]|\d{2,})\.\d+\.\d+/ || $CI_COMMIT_BRANCH =~ /^6\.([5-9]|\d{2,})\.\d+\.\d+/'
  when: on_success

.rule_exclude_on_release_branch:
  if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^6\.([5-9]|\d{2,})\.\d+\.\d+/ || $CI_COMMIT_BRANCH =~ /^6\.([5-9]|\d{2,})\.\d+\.\d+/'
  when: never

.downstream-release-branch-creation:
  extends: .base-no-setup
  stage: downstream
  image: curlimages/curl:7.72.0
  needs: [ ]
  variables:
    DOWNSTREAM_BRANCH: '${CI_COMMIT_BRANCH}${CI_MERGE_REQUEST_TARGET_BRANCH_NAME}'
  script:
    - .gitlab/bin/create_downstream_branch.sh "${DOWNSTREAM_PROJECT_PATH}" "${DOWNSTREAM_BRANCH}" "${DOWNSTREAM_PARENT_BRANCH}"

.downstream-job:
  extends: .base-no-setup
  stage: downstream
  needs: [ ]
  variables:
    PLATFORM_BRANCH: 'trunk'
  inherit:
    default: false
    variables:
      - PLATFORM_BRANCH
  allow_failure: false

create downstream branch:
  extends: .downstream-release-branch-creation
  rules:
    - !reference [ .rules, skip ]
    - !reference [ .rule_release_branch ]
  parallel:
    matrix:
      - DOWNSTREAM_PROJECT_PATH: 'shopware%2F6%2Fproduct%2Fcommercial'
        DOWNSTREAM_PARENT_BRANCH: 'trunk'
      - DOWNSTREAM_PROJECT_PATH: 'shopware%2F6%2Fproduct%2Frufus'
        DOWNSTREAM_PARENT_BRANCH: 'trunk'
      - DOWNSTREAM_PROJECT_PATH: 'shopware%2F6%2Fproduct%2Fproduction'
        DOWNSTREAM_PARENT_BRANCH: 'trunk'

# TODO: Remove this job after the last 6.4.x version has been released.
create downstream branch legacy:
  extends: .downstream-release-branch-creation
  rules:
    - !reference [ .rules, skip ]
    - !reference [ .rule_legacy_release_branch ]
  parallel:
    matrix:
      - DOWNSTREAM_PROJECT_PATH: 'shopware%2F6%2Fproduct%2Fcommercial'
        DOWNSTREAM_PARENT_BRANCH: '6.4'
      - DOWNSTREAM_PROJECT_PATH: 'shopware%2F6%2Fproduct%2Frufus'
        DOWNSTREAM_PARENT_BRANCH: '6.4'
      - DOWNSTREAM_PROJECT_PATH: 'shopware%2F6%2Fproduct%2Fproduction'
        DOWNSTREAM_PARENT_BRANCH: '6.4'

rufus source branch:
  extends: .downstream-job
  rules:
    - !reference [ .rules, skip ]
    - !reference [ .rule_branch_rufus_match ]
  variables:
    PLATFORM_BRANCH: '${CI_COMMIT_BRANCH}${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME}'
  trigger:
    project: shopware/6/product/rufus
    branch: '${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME}'
    strategy: depend

commercial source branch:
  extends: .downstream-job
  rules:
    - !reference [ .rules, skip ]
    - !reference [ .rule_branch_commercial_match ]
  variables:
    PLATFORM_BRANCH: '${CI_COMMIT_BRANCH}${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME}'
  trigger:
    project: shopware/6/product/commercial
    branch: '${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME}'
    strategy: depend

rufus target branch:
  extends: .downstream-job
  rules:
    - !reference [ .rules, skip ]
    - !reference [ .rule_exclude_on_branch_rufus_match ]
    - !reference [ .rule_release_branch ]
    - !reference [ .rule_legacy_release_branch ]
    - !reference [ .rule_legacy_dev_branch ]
  variables:
    PLATFORM_BRANCH: '${CI_COMMIT_BRANCH}${CI_MERGE_REQUEST_TARGET_BRANCH_NAME}'
  trigger:
    project: shopware/6/product/rufus
    branch: '${CI_COMMIT_BRANCH}${CI_MERGE_REQUEST_TARGET_BRANCH_NAME}'
    strategy: depend

commercial target branch:
  extends: .downstream-job
  rules:
    - !reference [ .rules, skip ]
    - !reference [ .rule_exclude_on_branch_commercial_match ]
    - !reference [ .rule_release_branch ]
    - !reference [ .rule_legacy_release_branch ]
    - !reference [ .rule_legacy_dev_branch ]
  variables:
    PLATFORM_BRANCH: '${CI_COMMIT_BRANCH}${CI_MERGE_REQUEST_TARGET_BRANCH_NAME}'
  trigger:
    project: shopware/6/product/commercial
    branch: '${CI_COMMIT_BRANCH}${CI_MERGE_REQUEST_TARGET_BRANCH_NAME}'
    strategy: depend

rufus trunk:
  extends: .downstream-job
  rules:
    - !reference [ .rules, skip ]
    - !reference [ .rule_exclude_on_branch_rufus_match ]
    - !reference [ .rule_exclude_on_release_branch ]
    - !reference [ .rule_exclude_on_legacy_release_branch ]
    - !reference [ .rule_exclude_on_legacy_dev_branch ]
    - if: '$CI_PIPELINE_SOURCE != "merge_request_event"'
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH'
    - when: manual
      allow_failure: true
  trigger:
    project: shopware/6/product/rufus
    strategy: depend

commercial trunk:
  extends: .downstream-job
  rules:
    - !reference [ .rules, skip ]
    - !reference [ .rule_exclude_on_branch_commercial_match ]
    - !reference [ .rule_exclude_on_release_branch ]
    - !reference [ .rule_exclude_on_legacy_release_branch ]
    - !reference [ .rule_exclude_on_legacy_dev_branch ]
    - if: '$CI_PIPELINE_SOURCE != "merge_request_event"'
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH'
    - when: manual
      allow_failure: true
  trigger:
    project: shopware/6/product/commercial
    strategy: depend
